name: "Terraform create EKS Cluster"

on: 
  workflow_dispatch: #this attribute will enable the manual run to the pipeline


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

  # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    env: 
      ROOT_PATH: '${{github.workspace}}/terraform'
        

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: terraform init
        run: |
          echo `pwd`
          echo "** Running Terraform Init**"
          terraform fmt
          terraform init
        working-directory: ${{ env.ROOT_PATH }}
    
      - name: terraform Plan
        run: |
          echo `pwd`
          echo "** Running Terraform Plan**"
          terraform plan 
        working-directory: ${{ env.ROOT_PATH }}

      - name: terraform Apply
        run: |
          echo `pwd`
          echo "** Running Terraform Apply**"
          terraform apply -auto-approve
        working-directory: ${{ env.ROOT_PATH }}

      - name: Terraform output
        id: tf
        run: |
          echo "AWS_ECR_REPO=$terraform output -raw repository_url)" >> $GITHUB_OUTPUT

      # - name: terraform destroy
      #   run: terraform destroy -auto-approve
      #   working-directory: ${{ env.ROOT_PATH }}

      - name: Login to Amazon ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the tagged docker image to Amazon ECR
        id : containerImage
        env:
          ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ecr
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ../Dockerfile
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    
      
